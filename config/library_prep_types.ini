
; INPUT_READS: Starting number of read files (1-3)
; OUTPUT_READS: Number of reheadered read files (1-2)
; UMI_LOCS: Comma-separated indices of reads with a UMI (1-3)
; UMI_LENS: Comma-separated lengths of the UMIs (1-3)
; SPACER: True if a spacer is used (TRUE/FALSE)
; SPACER_SEQ: Base sequence of the spacer ([A,C,G,T]+)
; UMI_POS: comma-separated Left-most position of the umi within read (1-based):
;          ie ith position of read of length n. (1 to n - UMI_LENS - len(SPACER_SEQ))
;          if a single value, UMI_POS is propagated to all fastqs having umis
;          if comma-separated, umis must be listed in same order for UMI_POS and UMI_LENS

; Expected order: R1, R2 = UMI, R3
[HALOPLEX]
INPUT_READS=3
OUTPUT_READS=2
UMI_LOCS=2
UMI_LENS=10
SPACER=FALSE
SPACER_SEQ=None
UMI_POS=1

; Expected order: R1, R2 = UMI, R3
[SURESELECT]
INPUT_READS=3
OUTPUT_READS=2
UMI_LOCS=2
UMI_LENS=10
SPACER=FALSE
SPACER_SEQ=None
UMI_POS=1

[EPIC-DS]
INPUT_READS=2
OUTPUT_READS=2
UMI_LOCS=1,2
UMI_LENS=12,12
SPACER=TRUE
SPACER_SEQ=TGACT
UMI_POS=1

[SIMSENSEQ-PE]
INPUT_READS=2
OUTPUT_READS=2
UMI_LOCS=1
UMI_LENS=12
SPACER=TRUE
SPACER_SEQ=ATGGGAAAGAGTGTCC
UMI_POS=1

[SIMSENSEQ-SE]
INPUT_READS=1
OUTPUT_READS=1
UMI_LOCS=1
UMI_LENS=12
SPACER=TRUE
SPACER_SEQ=ATGGGAAAGAGTGTCC
UMI_POS=1

[CUSTOM]
# enter the number of input fastqs
INPUT_READS=0
# enter the number of output reheadered fastqs
OUTPUT_READS=0
# enter the location of the fastqs with umi.  
# a single value or comma-separated list
# if single value, propagated to all fastqs
UMI_LOCS=0
# enter the length of the umis for each input fastq with umis
# a single value or comma-separated list
# if single value, propagated to all fastqs
UMI_LENS=0
# specify whether a spacer is present in each input fastq with umis
# a single value or comma-separated list
# if single value, propagated to all fastqs
SPACER=0
# enter the spacer sequences, use '' when no spacer is present (SPACER=False)
# a single value or comma-separated list
# if single value and SPACER=True, propagated to all fastqs
SPACER_SEQ=0
# enter the position 1-based of the umi in read
# a single value or comma-separated list
# if single value, propagated to all fastqs with umis
UMI_POS=0


